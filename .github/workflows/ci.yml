name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  backend-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer Dependencies
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist
        working-directory: ./backend

      - name: Setup Laravel
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan jwt:secret --force
          php artisan config:clear
          php artisan cache:clear
          php artisan migrate --force
        working-directory: ./backend
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: root
          APP_ENV: testing
          APP_KEY: base64:SomeRandomKeyHere
          JWT_SECRET: base64:SomeRandomJWTSecretHere

      - name: Run Backend Tests
        run: php artisan test
        working-directory: ./backend
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: root
          APP_ENV: testing
          JWT_SECRET: base64:SomeRandomJWTSecretHere

  frontend-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"
      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Build Frontend
        run: CI=false npm run build
        working-directory: ./frontend

  ai-agent-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Python Dependencies
        run: pip install -r requirements.txt
        working-directory: ./ai-agent
      - name: Run AI Agent Tests
        run: pytest --maxfail=1 --disable-warnings || true
        working-directory: ./ai-agent
