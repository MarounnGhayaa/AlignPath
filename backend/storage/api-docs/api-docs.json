{
    "openapi": "3.0.0",
    "info": {
        "title": "AlignPath APIs",
        "description": "RESTful APIs for AlignPath, offering endpoints for authentication, user management, and personalized career recommendations with their corresponding quests, problems, skills, and resources.",
        "version": "v0.1"
    },
    "servers": [
        {
            "url": "/api/v0.1",
            "description": "Base path for v0.1 API"
        }
    ],
    "paths": {
        "/admin/analyses": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List conversation analyses",
                "description": "Returns the latest daily conversation analyses including related user information. Requires admin role.",
                "operationId": "60ddd565cf48c8213311da5b6afa9bd3",
                "responses": {
                    "200": {
                        "description": "Analyses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 12
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 44
                                            },
                                            "thread_id": {
                                                "type": "integer",
                                                "example": 18,
                                                "nullable": true
                                            },
                                            "day": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-09-20"
                                            },
                                            "summary": {
                                                "type": "string",
                                                "example": "Strong engagement with mentor support."
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "example": {
                                                    "sentiment": "positive"
                                                },
                                                "nullable": true
                                            },
                                            "user": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 44
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "student_sara"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "sara@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/users/{user}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user",
                "description": "Deletes the specified user. Only admins can delete accounts and cannot delete themselves.",
                "operationId": "efb91e796f8999970a370ef9c5e1dfda",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 77
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Cannot delete yourself"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/accept-path": {
            "post": {
                "tags": [
                    "AiAgent"
                ],
                "summary": "Accept a recommended path",
                "description": "Creates a learning path from an existing recommendation and links it to the authenticated user.",
                "operationId": "e9df16bdb5cc873309d727139e3ae3ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recommendation_id"
                                ],
                                "properties": {
                                    "recommendation_id": {
                                        "description": "Identifier of the recommendation being accepted",
                                        "type": "integer",
                                        "example": 42
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Path accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Path accepted and saved successfully"
                                        },
                                        "path_id": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "career_name": {
                                            "type": "string",
                                            "example": "AI Research Scientist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "404": {
                        "description": "Recommendation not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/recommend-careers": {
            "post": {
                "tags": [
                    "AiAgent"
                ],
                "summary": "Generate fresh career recommendations",
                "description": "Uses the user's saved preferences to request career recommendations from the AI agent and store them.",
                "operationId": "5b4224199e769f75dae86ecbc5ec0de8",
                "responses": {
                    "200": {
                        "description": "Career recommendations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "career_paths": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Machine Learning Engineer"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Design and deploy predictive systems.",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "404": {
                        "description": "User preferences missing"
                    },
                    "502": {
                        "description": "AI provider failure"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/generate-quests-and-problems": {
            "post": {
                "tags": [
                    "AiAgent"
                ],
                "summary": "Generate learning content for a path",
                "description": "Asks the AI agent to generate quests, problems, skills, and learning resources for the given career and path.",
                "operationId": "ee31100287ec51e8421ee7d992d569f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "career",
                                    "path_id"
                                ],
                                "properties": {
                                    "career": {
                                        "type": "string",
                                        "example": "Product Design"
                                    },
                                    "path_id": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generated learning entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "quests": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Design discovery"
                                                    },
                                                    "subtitle": {
                                                        "type": "string",
                                                        "example": "Understand user needs",
                                                        "nullable": true
                                                    },
                                                    "difficulty": {
                                                        "type": "string",
                                                        "example": "intermediate",
                                                        "nullable": true
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "2 weeks",
                                                        "nullable": true
                                                    },
                                                    "path_id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "problems": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "User persona mismatch"
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "Which change best satisfies the new research findings?"
                                                    },
                                                    "first_answer": {
                                                        "type": "string",
                                                        "example": "Adjust personas to match new segments"
                                                    },
                                                    "second_answer": {
                                                        "type": "string",
                                                        "example": "Ignore the research"
                                                    },
                                                    "third_answer": {
                                                        "type": "string",
                                                        "example": "Delay the launch"
                                                    },
                                                    "correct_answer": {
                                                        "type": "string",
                                                        "example": "first_answer"
                                                    },
                                                    "points": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "path_id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "skills": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Rapid prototyping"
                                                    },
                                                    "value": {
                                                        "type": "integer",
                                                        "example": 20
                                                    },
                                                    "path_id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "learningResources": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Design sprint playbook"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "article"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "example": "https://example.com/design-sprint"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid payload"
                    },
                    "502": {
                        "description": "AI provider failure"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/guest/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Authenticate a user and receive a JWT token plus user details.",
                "operationId": "8d9d239bb6156ec94070eb87c3222375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "mentor_mike"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "mentor"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "payload": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guest/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "description": "Register a new user and receive a JWT token plus stored profile details.",
                "operationId": "1b57f2354c3492616b19658bcf065170",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "student_sara"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "sara@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "student",
                                            "mentor"
                                        ],
                                        "example": "student"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "student_sara"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "sara@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "student"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/user/mentors/{person}/chats": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "Fetch chat history with a mentor",
                "description": "Return chronological messages exchanged with the specified mentor.",
                "operationId": "42b05042469c6ff4cfe43955b7a15599",
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "Mentor user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 91
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1201
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Great job on completing the SQL quest!"
                                            },
                                            "sender_id": {
                                                "type": "integer",
                                                "example": 33
                                            },
                                            "isFromMentor": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-21T18:12:43Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempting to open a chat with yourself"
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/mentors/{person}/messages": {
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Send a message to a mentor",
                "description": "Persist a new message in the conversation with the given mentor.",
                "operationId": "e8a2bdfff034f3f655abf6e11ae7291f",
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "Mentor user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 91
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Could you review my portfolio outline?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1450
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "sender_id": {
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "isFromMentor": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-21T18:19:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempting to message yourself"
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/users/{person}/chats": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "Fetch chat history with a student",
                "description": "Return chronological messages exchanged with the specified student.",
                "operationId": "2b9fd9f58fef4c5c24c0d69c836607da",
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "Student user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 44
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2201
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Let's schedule our next mentoring session."
                                            },
                                            "sender_id": {
                                                "type": "integer",
                                                "example": 44
                                            },
                                            "isFromMentor": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempting to open a chat with yourself"
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/users/{person}/messages": {
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Send a message to a student",
                "description": "Persist a new message in the conversation with the given student.",
                "operationId": "51be5af9615ab07d45f0f3232e219d54",
                "parameters": [
                    {
                        "name": "person",
                        "in": "path",
                        "description": "Student user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 44
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Great progress, keep going!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2288
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "sender_id": {
                                            "type": "integer",
                                            "example": 91
                                        },
                                        "isFromMentor": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Attempting to message yourself"
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/transcribe": {
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Transcribe an audio message",
                "description": "Uploads an audio clip for speech-to-text transcription using the configured fallback service.",
                "operationId": "3dc9e2d35b640038f56bf51891119885",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "audio"
                                ],
                                "properties": {
                                    "audio": {
                                        "description": "Audio file to transcribe (mp3, wav, webm, mp4, ogg)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transcription result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "text": {
                                            "type": "string",
                                            "example": "Hi mentor, I finished the assignment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Invalid file upload"
                    },
                    "500": {
                        "description": "Transcription service error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/chat": {
            "post": {
                "tags": [
                    "Gemini"
                ],
                "summary": "Send messages to the Gemini-powered assistant",
                "description": "Creates or continues a chat thread with the Gemini assistant and returns the assistant response.",
                "operationId": "fc9009abeb5047c89958c4004792a393",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "messages"
                                ],
                                "properties": {
                                    "thread_id": {
                                        "description": "Existing thread identifier to continue",
                                        "type": "integer",
                                        "example": 18,
                                        "nullable": true
                                    },
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "role",
                                                "content"
                                            ],
                                            "properties": {
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "user",
                                                        "model"
                                                    ],
                                                    "example": "user"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "How can I improve my data analysis skills?"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "system": {
                                        "type": "string",
                                        "example": "Focus on project-based advice",
                                        "nullable": true
                                    },
                                    "temperature": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.6,
                                        "nullable": true
                                    },
                                    "maxOutputTokens": {
                                        "type": "integer",
                                        "example": 1024,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assistant reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reply": {
                                            "type": "string",
                                            "example": "Start with exploratory data analysis on open datasets.",
                                            "nullable": true
                                        },
                                        "blocked": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "thread_id": {
                                            "type": "integer",
                                            "example": 18
                                        },
                                        "user_message_id": {
                                            "type": "integer",
                                            "example": 3101,
                                            "nullable": true
                                        },
                                        "assistant_message_id": {
                                            "type": "integer",
                                            "example": 3102
                                        },
                                        "usage": {
                                            "type": "object",
                                            "example": {
                                                "promptTokenCount": 230,
                                                "candidatesTokenCount": 180
                                            },
                                            "nullable": true
                                        },
                                        "raw": {
                                            "description": "Raw payload returned by Gemini for debugging",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Gemini API error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/chat/threads": {
            "get": {
                "tags": [
                    "Gemini"
                ],
                "summary": "List chat threads",
                "description": "Returns the authenticated user's chat threads ordered by last activity.",
                "operationId": "ff275d96dd132b75fcacdac55576f5b1",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Threads list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 18
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Learning SQL"
                                                    },
                                                    "last_message_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-21T17:45:00Z",
                                                        "nullable": true
                                                    },
                                                    "messages_count": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "preview": {
                                                        "type": "string",
                                                        "example": "Focus on real datasets to...",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 37
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/chat/threads/{thread}": {
            "get": {
                "tags": [
                    "Gemini"
                ],
                "summary": "Retrieve a chat thread",
                "description": "Fetches a single chat thread with its messages.",
                "operationId": "eaee0f145f71e3c36b458b03602d7d1a",
                "parameters": [
                    {
                        "name": "thread",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 18
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thread detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "thread": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 18
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Learning SQL"
                                                },
                                                "last_message_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 4101
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "enum": [
                                                            "user",
                                                            "model"
                                                        ],
                                                        "example": "model"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Start with SELECT queries..."
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-21T17:45:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "403": {
                        "description": "Thread does not belong to the user"
                    },
                    "404": {
                        "description": "Thread not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/resources/{pathId}": {
            "get": {
                "tags": [
                    "LearningResources"
                ],
                "summary": "List learning resources for a path",
                "description": "Return curated learning resources for the given learning path.",
                "operationId": "358b210ca50db88e4e26007e24781d61",
                "parameters": [
                    {
                        "name": "pathId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of learning resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 9
                                            },
                                            "path_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Official Python Tutorial"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "article"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://docs.python.org/3/tutorial/"
                                            },
                                            "description": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/mentors": {
            "get": {
                "tags": [
                    "Mentors"
                ],
                "summary": "Search mentors",
                "description": "Return mentors that match the authenticated user's saved recommendations and optional search term.",
                "operationId": "9bf494d2410f39719debc3ac0bf1c639",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter mentors by name, company, position, or expertise",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "design"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mentor list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 91
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Daniel Rivera"
                                            },
                                            "position": {
                                                "type": "string",
                                                "example": "Product Designer at Acme"
                                            },
                                            "company": {
                                                "type": "string",
                                                "example": "Acme",
                                                "nullable": true
                                            },
                                            "expertise": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "UX"
                                                }
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "example": "https://cdn.alignpath.io/avatars/91.png",
                                                "nullable": true
                                            },
                                            "isOnline": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "lastSeen": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-20T20:01:00Z",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/guest/chat-messages": {
            "get": {
                "tags": [
                    "Automation"
                ],
                "summary": "Export chat messages for automation",
                "description": "Provide N8N (or other automation tooling) access to chat messages for a given day, optionally filtered by thread.",
                "operationId": "9a7a3e165035a37b489b1e28fcfeadce",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Day to export (ISO 8601 date)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-09-20"
                        }
                    },
                    {
                        "name": "tz",
                        "in": "query",
                        "description": "IANA timezone for the provided day",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Europe/Berlin"
                        }
                    },
                    {
                        "name": "thread_id",
                        "in": "query",
                        "description": "Filter messages to a thread",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 18
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of messages to return (max 1000)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 200
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor returned from a previous call",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "MjAyNS0wOS0yMFQxMjowMDowMFo=|1201"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message export",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "start_local": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-20T00:00:00+02:00"
                                                },
                                                "end_local": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-21T00:00:00+02:00"
                                                },
                                                "tz": {
                                                    "type": "string",
                                                    "example": "Europe/Berlin"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "next_cursor": {
                                                    "type": "string",
                                                    "example": "MjAyNS0wOS0yMFQyMTo0NTowMFo=|980",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 3201
                                                    },
                                                    "thread_id": {
                                                        "type": "integer",
                                                        "example": 18
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 12,
                                                        "nullable": true
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "model"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Here is a reflection of today's progress..."
                                                    },
                                                    "meta": {
                                                        "description": "Provider metadata",
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-20T11:15:42Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/guest/daily-conversation-analyses": {
            "post": {
                "tags": [
                    "Automation"
                ],
                "summary": "Store conversation analyses",
                "description": "Creates or updates one or more daily conversation analyses, typically from an automation workflow.",
                "operationId": "4d193ad9f88bae7dc8ab8bd6efe25778",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "user_id",
                                        "day"
                                    ],
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": 44
                                        },
                                        "thread_id": {
                                            "type": "integer",
                                            "example": 18,
                                            "nullable": true
                                        },
                                        "day": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-09-20"
                                        },
                                        "summary": {
                                            "type": "string",
                                            "example": "Student maintained positive engagement.",
                                            "nullable": true
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "example": {
                                                "sentiment": "positive",
                                                "topics": "portfolio"
                                            },
                                            "nullable": true
                                        },
                                        "raw": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                },
                                "minItems": 1
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Stored analyses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 17
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 44
                                                    },
                                                    "thread_id": {
                                                        "type": "integer",
                                                        "example": 18,
                                                        "nullable": true
                                                    },
                                                    "day": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-09-20"
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "attributes": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "raw": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/user/problems/{pathId}": {
            "get": {
                "tags": [
                    "Problems"
                ],
                "summary": "List problems for a path",
                "description": "Return the multiple-choice problems linked to the given learning path.",
                "operationId": "1beaf4296b719c7a1e68e53bc5f96b6a",
                "parameters": [
                    {
                        "name": "pathId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of problems",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 50
                                            },
                                            "path_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Two Sum"
                                            },
                                            "subtitle": {
                                                "type": "string",
                                                "example": "Find indices adding up to target",
                                                "nullable": true
                                            },
                                            "question": {
                                                "type": "string",
                                                "example": "Given an array of integers..."
                                            },
                                            "first_answer": {
                                                "type": "string",
                                                "example": "Use a hash map"
                                            },
                                            "second_answer": {
                                                "type": "string",
                                                "example": "Sort the list"
                                            },
                                            "third_answer": {
                                                "type": "string",
                                                "example": "Brute force"
                                            },
                                            "correct_answer": {
                                                "type": "string",
                                                "example": "first_answer"
                                            },
                                            "points": {
                                                "type": "integer",
                                                "example": 100
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/problem/{problemId}": {
            "get": {
                "tags": [
                    "Problems"
                ],
                "summary": "Get a problem by id",
                "description": "Fetch the detailed statement for the specified problem.",
                "operationId": "929de602180418e5bd5151ded0acad58",
                "parameters": [
                    {
                        "name": "problemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Problem",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "path_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Two Sum"
                                        },
                                        "subtitle": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "question": {
                                            "type": "string",
                                            "example": "Given an array of integers..."
                                        },
                                        "first_answer": {
                                            "type": "string"
                                        },
                                        "second_answer": {
                                            "type": "string"
                                        },
                                        "third_answer": {
                                            "type": "string"
                                        },
                                        "correct_answer": {
                                            "type": "string"
                                        },
                                        "points": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "404": {
                        "description": "Problem not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/getInfo/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user info",
                "description": "Return the public profile data for the given user id.",
                "operationId": "db5ac8b1c91a35e83a10492678d11855",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "learner_jane"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "student"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Berlin, DE",
                                                    "nullable": true
                                                },
                                                "avatar_url": {
                                                    "type": "string",
                                                    "example": "https://cdn.alignpath.io/avatars/3.png",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/paths": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "List user's learning paths",
                "description": "Return all learning paths saved by the authenticated user.",
                "operationId": "3a09d16f334ed9eb9bfd423b311d297a",
                "responses": {
                    "200": {
                        "description": "Array of user paths",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Data Science"
                                            },
                                            "tag": {
                                                "type": "string",
                                                "example": "data_science"
                                            },
                                            "progress_percentage": {
                                                "type": "integer",
                                                "example": 45
                                            },
                                            "date_saved": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-01T09:30:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/updateInfo/{id}": {
            "patch": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user profile",
                "description": "Updates selected fields on the user's profile. Fields are optional and will only be updated when provided.",
                "operationId": "c06ce5d008d34fb47f4377d3fb6c2151",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "learner_jane",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123",
                                        "nullable": true
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123",
                                        "nullable": true
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Berlin, DE",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "learner_jane"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/quests/{pathId}": {
            "get": {
                "tags": [
                    "Quests"
                ],
                "summary": "List quests for a path",
                "description": "Return all quests that belong to the supplied learning path.",
                "operationId": "c63d61ae0d3bbfbaeeeccd9314632be0",
                "parameters": [
                    {
                        "name": "pathId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of quests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "path_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Intro to Python"
                                            },
                                            "subtitle": {
                                                "type": "string",
                                                "example": "Understand core syntax",
                                                "nullable": true
                                            },
                                            "description": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "difficulty": {
                                                "type": "string",
                                                "example": "beginner",
                                                "nullable": true
                                            },
                                            "duration": {
                                                "type": "string",
                                                "example": "1 week",
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "nullable": true
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/recommendations": {
            "get": {
                "tags": [
                    "Recommendations"
                ],
                "summary": "List user's saved recommendations",
                "operationId": "289beb0d22e1164b1a22772c2dd8dca2",
                "responses": {
                    "200": {
                        "description": "Array of recommendations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "career_name": {
                                                "type": "string",
                                                "example": "Data Analyst"
                                            },
                                            "description": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/skills/{pathId}": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "List skills for a path",
                "description": "Return the current skill ratings attached to a learning path.",
                "operationId": "7e935542e73954d892985884319ea6ab",
                "parameters": [
                    {
                        "name": "pathId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of skills",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 7
                                            },
                                            "path_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Control Flow"
                                            },
                                            "value": {
                                                "type": "integer",
                                                "example": 60
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/skills/{skill}": {
            "put": {
                "tags": [
                    "Skills"
                ],
                "summary": "Update a skill progress value",
                "description": "Update the numeric progress value for a specific skill and propagate the user's path progress.",
                "operationId": "d8942eeedbdc44a50f2c5a0d105fae0a",
                "parameters": [
                    {
                        "name": "skill",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "integer",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "example": 75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated skill",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 7
                                        },
                                        "path_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Control Flow"
                                        },
                                        "value": {
                                            "type": "integer",
                                            "example": 75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/users": {
            "get": {
                "tags": [
                    "UserDirectory"
                ],
                "summary": "Search students",
                "description": "Allow mentors to search the directory of students by name, company, position, or expertise.",
                "operationId": "a839c8e98992b753ec0115f7dd5abcc5",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Case-insensitive search term",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "frontend"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of students to return (max 200)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Students list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 44
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Sofia Patel"
                                            },
                                            "position": {
                                                "type": "string",
                                                "example": "Frontend Developer at Vanta",
                                                "nullable": true
                                            },
                                            "company": {
                                                "type": "string",
                                                "example": "Vanta",
                                                "nullable": true
                                            },
                                            "expertise": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "React"
                                                }
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "example": "https://cdn.alignpath.io/avatars/44.png",
                                                "nullable": true
                                            },
                                            "isOnline": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "lastSeen": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-09-19T09:15:00Z",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "403": {
                        "description": "User is not a mentor"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/preferences": {
            "post": {
                "tags": [
                    "UserPreference"
                ],
                "summary": "Save user preferences",
                "description": "Create or update the authenticated user's learning preferences. All fields are required and stored as plain strings.",
                "operationId": "60b8dc6a933482ee8b8d1e7c30614983",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "skills",
                                    "interests",
                                    "values",
                                    "careers"
                                ],
                                "properties": {
                                    "skills": {
                                        "type": "string",
                                        "example": "Python, SQL, Statistics"
                                    },
                                    "interests": {
                                        "type": "string",
                                        "example": "Data science, automation"
                                    },
                                    "values": {
                                        "type": "string",
                                        "example": "Innovation, impact"
                                    },
                                    "careers": {
                                        "type": "string",
                                        "example": "Data Analyst, ML Engineer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stored preferences",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skills": {
                                                    "type": "string"
                                                },
                                                "interests": {
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "type": "string"
                                                },
                                                "careers": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated user"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserBasic": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane@example.com"
                    },
                    "avatar_url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "AiAgent",
            "description": "AiAgent"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Chats",
            "description": "Chats"
        },
        {
            "name": "Gemini",
            "description": "Gemini"
        },
        {
            "name": "LearningResources",
            "description": "LearningResources"
        },
        {
            "name": "Mentors",
            "description": "Mentors"
        },
        {
            "name": "Automation",
            "description": "Automation"
        },
        {
            "name": "Problems",
            "description": "Problems"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Quests",
            "description": "Quests"
        },
        {
            "name": "Recommendations",
            "description": "Recommendations"
        },
        {
            "name": "Skills",
            "description": "Skills"
        },
        {
            "name": "UserDirectory",
            "description": "UserDirectory"
        },
        {
            "name": "UserPreference",
            "description": "UserPreference"
        }
    ]
}